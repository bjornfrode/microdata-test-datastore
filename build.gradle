import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    // Documentation :
    // https://github.com/statisticsnorway/ssb-developer-guide/blob/gradle-info/docs/azure_pipeline_doc.md#maven-repository-credentials-in-gradle
    id 'net.linguica.maven-settings' version '0.5'
    id 'org.owasp.dependencycheck' version '6.0.3'
    id "org.asciidoctor.convert" version "1.5.9.2"
}

group = 'no.microdata.datastore'
def buildNumber = project.hasProperty('buildNumber') ? project.property('buildNumber') : '0'
def applicationTitle = project.name
def applicationVersion = "0.9.$buildNumber"
project.version = applicationVersion

sourceCompatibility = '15'

// Replacing placeholder in application.properties with name and version
processResources{
    filesMatching('application.yaml') {
        filter ReplaceTokens, tokens: [APPLICATION_VERSION: new String(applicationVersion),
                                       APPLICATION_NAME   : new String(applicationTitle)]
    }
}

repositories {
    maven {
        name = 'ssb-bip-public' // should match <id>myRepo</id> of appropriate <server> in settings.xml
        url = 'https://nexus.prod-bip-ci.ssb.no/repository/maven-public/'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.msgpack:jackson-dataformat-msgpack:0.8.21'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.5'
    implementation 'com.google.guava:guava:30.0-jre'
    implementation 'org.xerial:sqlite-jdbc:3.34.0'
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.withType(JavaCompile).each {
    it.options.compilerArgs.add('--enable-preview')
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    jvmArgs(['--enable-preview'])
    useJUnitPlatform()
    outputs.dir snippetsDir
}

bootJar {
    archiveBaseName = applicationTitle.toLowerCase()
    archiveVersion = applicationVersion
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }

    //    Local js and css so the docs works behind firewall
    from ("$rootDir/src/main/resources/rest-docs") {
        into 'static/docs/js'
    }

    manifest {
        attributes("Implementation-Title": applicationTitle,
                "Implementation-Version": applicationVersion)
    }
}


asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

dependencyCheck {
    //Build will fail on HIGH CVSS
    failBuildOnCVSS=7.0
    format = org.owasp.dependencycheck.reporting.ReportGenerator.Format.ALL
}

springBoot {
    mainClass = "no.microdata.datastore.DatastoreApplication"
    buildInfo {
        properties {
            additional = [
                    'info.version': applicationVersion
            ]
        }
    }
}